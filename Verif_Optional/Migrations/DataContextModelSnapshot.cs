// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Verif_Optional.Data;

#nullable disable

namespace Verif_Optional.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Verif_Optional.Models.Autori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Autori");
                });

            modelBuilder.Entity("Verif_Optional.Models.Many_to_Many.AutoriCarti", b =>
                {
                    b.Property<Guid>("Model1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Model2Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Model1Id", "Model2Id");

                    b.HasIndex("Model2Id");

                    b.ToTable("AutoriCarti");
                });

            modelBuilder.Entity("Verif_Optional.Models.Many_to_Many.Model1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Models1");
                });

            modelBuilder.Entity("Verif_Optional.Models.Many_to_Many.Model2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Models2");
                });

            modelBuilder.Entity("Verif_Optional.Models.One_to_Many.Model3", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Models3");
                });

            modelBuilder.Entity("Verif_Optional.Models.One_to_Many.Model4", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Model3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Model3Id");

                    b.ToTable("Models4");
                });

            modelBuilder.Entity("Verif_Optional.Models.Many_to_Many.AutoriCarti", b =>
                {
                    b.HasOne("Verif_Optional.Models.Many_to_Many.Model1", "Model1")
                        .WithMany("AutoriCarti")
                        .HasForeignKey("Model1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Verif_Optional.Models.Many_to_Many.Model2", "Model2")
                        .WithMany("AutoriCarti")
                        .HasForeignKey("Model2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model1");

                    b.Navigation("Model2");
                });

            modelBuilder.Entity("Verif_Optional.Models.One_to_Many.Model4", b =>
                {
                    b.HasOne("Verif_Optional.Models.One_to_Many.Model3", "Model3")
                        .WithMany("Model4")
                        .HasForeignKey("Model3Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model3");
                });

            modelBuilder.Entity("Verif_Optional.Models.Many_to_Many.Model1", b =>
                {
                    b.Navigation("AutoriCarti");
                });

            modelBuilder.Entity("Verif_Optional.Models.Many_to_Many.Model2", b =>
                {
                    b.Navigation("AutoriCarti");
                });

            modelBuilder.Entity("Verif_Optional.Models.One_to_Many.Model3", b =>
                {
                    b.Navigation("Model4");
                });
#pragma warning restore 612, 618
        }
    }
}
